# Select what we should cache
#cache:
#  paths:
#  - vendor/

before_script:
# Install git, the php image doesn't have installed
#- apt-get update -yqq
#- apt-get install git libcurl4-openssl-dev -yqq
# Install required PHP extensions
#- docker-php-ext-install mysqli 
#- docker-php-ext-install curl
# set up config files
#- touch backend/config_.php
#- echo "<?php // local config" >> backend/config_.php
#- echo "define('DB_HOST', 'mysql');" >> backend/config_.php
#- echo "define('DB_USER', 'root');" >> backend/config_.php
#- echo "define('DB_PWD', 'mysql');" >> backend/config_.php
#- echo "define('DB_NAME', 'lynxphp'); ?>" >> backend/config_.php
#- touch frontend/config_.php
# set up wait for it
#- git clone https://github.com/vishnubob/wait-for-it.git
#- wait-for-it/wait-for-it.sh -t 0 mysql:3306
#- php -v
  - docker info

variables:
  # Configure mysql service (https://hub.docker.com/_/mysql/)
  MYSQL_DATABASE: "lynxphp"
  MYSQL_ROOT_PASSWORD: "mysql"
  MYSQL_ROOT_HOST: "%"

services:
  - docker:19.03.12-dind

# We test PHP5.6 (the default) with MySQL
# Select image from https://hub.docker.com/_/php/
#test:php56:mysql:
#  tags:
#    - docker
#  script:
#   - tests/run.sh
#  - vendor/bin/phpunit --configuration phpunit_mysql.xml --coverage-text

# We test PHP7 with MySQL, but we allow it to fail
#test:php7:mysql:
#  image: php:7-cli
#  tags:
#    - docker
#  script:
#   - tests/run.sh
#  - vendor/bin/phpunit --configuration phpunit_mysql.xml --coverage-text

test:php-latest:mysql-latest:
  image: docker:19
  services:
    - name: mysql/mysql-server:latest
      alias: mysql
  tags:
    - docker
  script:
  - docker build -t phplynx/php-latest --build-arg PHP_IMAGE=php:latest .
  - docker run phplynx/php-latest
#  allow_failure: true
