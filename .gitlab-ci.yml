# Select what we should cache
#cache:
#  paths:
#  - vendor/

.default-mysql: &default-mysql
  # Install required PHP extensions
  - docker-php-ext-install -j$(nproc) mysqli curl
  # set up config files
  - touch backend/config_.php
  - echo "<?php // local config" >> backend/config_.php
  - echo "define('DB_HOST', 'mysql');" >> backend/config_.php
  - echo "define('DB_USER', 'root');" >> backend/config_.php
  - echo "define('DB_PWD', 'mysql');" >> backend/config_.php
  - echo "define('DB_NAME', 'lynxphp');" >> backend/config_.php
  - echo "?>"  >> backend/config_.php
  - cp backend/config_.php backend/config_localhost.php
  - touch frontend/config_.php
  - cp frontend/config_.php frontend/config_localhost.php

.default-pgsql: &default-pgsql
  # Install required PHP extensions
  - docker-php-ext-install -j$(nproc) pgsql curl
  # set up config files
  - touch backend/config_.php
  - echo "<?php // local config" >> backend/config_.php
  - echo "define('DB_HOST', 'pgsql');" >> backend/config_.php
  - echo "define('DB_USER', 'lynxphp');" >> backend/config_.php
  - echo "define('DB_PWD', '');" >> backend/config_.php
  - echo "define('DB_NAME', 'lynxphp');" >> backend/config_.php
  - echo "define('DB_DRIVER', 'pgsql');" >> backend/config_.php
  - echo "?>"  >> backend/config_.php
  - cp backend/config_.php backend/config_localhost.php
  - touch frontend/config_.php
  - cp frontend/config_.php frontend/config_localhost.php

# Why use debian if alpine is faster? Robustness tests?
.debian: &debian
  - apt-get update -yqq
  - apt-get install -yqq git libcurl4-openssl-dev libpq-dev wget curl

.alpine: &alpine
  - apk add curl-dev postgresql-dev

variables:
  # Configure mysql service (https://hub.docker.com/_/mysql/)
  MYSQL_DATABASE: "lynxphp"
  MYSQL_ROOT_PASSWORD: "mysql"
  MYSQL_ROOT_HOST: "%"
  POSTGRES_DB: "lynxphp"
  POSTGRES_USER: "lynxphp"
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST_AUTH_METHOD: trust

# We test PHP5.6 (the default) with MySQL
# Select image from https://hub.docker.com/_/php/
#test:php56:mysql:
#  tags:
#    - docker
#  script:
#   - tests/run.sh
#  - vendor/bin/phpunit --configuration phpunit_mysql.xml --coverage-text

# We test PHP7 with MySQL, but we allow it to fail
#test:php7:mysql:
#  image: php:7-cli
#  tags:
#    - docker
#  script:
#   - tests/run.sh
#  - vendor/bin/phpunit --configuration phpunit_mysql.xml --coverage-text

# cli is always alpine
# will keep it this way until we find a bug that requires us to test debian

test:cli:my:latest:
  before_script:
    - *alpine
    - *default-mysql
  image: php:8.0.0-cli-alpine
  services:
    - name: mysql/mysql-server:latest
      alias: mysql
  tags:
    - docker
  script:
    - tests/run.sh
#  allow_failure: true

test:cli:pg:latest:
  before_script:
    - *alpine
    - *default-pgsql
  image: php:8.0.0-cli-alpine
  services:
    - name: postgres:latest
      alias: pgsql
  tags:
    - docker
  script:
    - tests/run.sh
#  allow_failure: true

# apache is always debian
# so alpine behaviors maybe different

# debian
test:mod:my:latest:
  before_script:
    - *debian
    - a2enmod rewrite && sed -i '/<Directory \/var\/www\/>/,/<\/Directory>/ s/AllowOverride None/AllowOverride all/' /etc/apache2/apache2.conf && service apache2 restart
    - mv /var/www/html /var/www/old && cd .. && mv lynxphp /var/www && ln -s /var/www/lynxphp/frontend /var/www/html && ln -s /var/www/lynxphp/backend /var/www/html/backend && cd /var/www/lynxphp
    - *default-mysql
    - service apache2 restart
  image: php:8.0.0-apache
  services:
    - name: mysql/mysql-server:latest
      alias: mysql
  tags:
    - docker
  script:
    - tests/run.sh
    - curl http://localhost/backend/
    - curl http://localhost/
    - wget -O phpunit https://phar.phpunit.de/phpunit-nightly.phar
    - chmod u+x phpunit
    - ./phpunit tests/integration

#test:nginx:mys:atest:
#  before_script:
#    - *alpine
#    - *default-mysql
#  image: php:8.0.0-nginx-alpine
#  services:
#    - name: mysql/mysql-server:latest
#      alias: mysql
#  tags:
#    - docker
#  script:
#    - tests/run.sh

# debian
test:mod:pg:latest:
  before_script:
    - *debian
    - a2enmod rewrite && sed -i '/<Directory \/var\/www\/>/,/<\/Directory>/ s/AllowOverride None/AllowOverride all/' /etc/apache2/apache2.conf
    - mv /var/www/html /var/www/old && cd .. && mv lynxphp /var/www && ln -s /var/www/lynxphp/frontend /var/www/html && ln -s /var/www/lynxphp/backend /var/www/html/backend && cd /var/www/lynxphp
    - *default-pgsql
    - service apache2 restart
  image: php:8.0.0-apache
  services:
    - name: postgres:latest
      alias: pgsql
  tags:
    - docker
  script:
    - tests/run.sh
    - curl http://localhost/backend/
    - curl http://localhost/
    - wget -O phpunit https://phar.phpunit.de/phpunit-nightly.phar
    - chmod u+x phpunit
    - ./phpunit tests/integration

#test:nginx:pg:latest:
#  before_script:
#    - *alpine
#    - *default-pgsql
#  image: php:8.0.0-nginx-alpine
#  services:
#    - name: postgres:12.2-alpine
#      alias: pgsql
#  tags:
#    - docker
#  script:
#    - tests/run.sh

