# Select what we should cache
#cache:
#  paths:
#  - vendor/

# Why use debian if alpine is faster? Robustness tests?
.debian:
  before_script:
  - apt-get update -yqq
  - apt-get install git libcurl4-openssl-dev -yqq

.alpine: &alpine
  before_script:
  - apk add curl-dev

before_script:
# Install required PHP extensions
- docker-php-ext-install -j$(nproc) mysqli curl
# set up config files
- touch backend/config_.php
- echo "<?php // local config" >> backend/config_.php
- echo "define('DB_HOST', 'mysql');" >> backend/config_.php
- echo "define('DB_USER', 'root');" >> backend/config_.php
- echo "define('DB_PWD', 'mysql');" >> backend/config_.php
- echo "define('DB_NAME', 'lynxphp'); ?>" >> backend/config_.php
- touch frontend/config_.php

variables:
  # Configure mysql service (https://hub.docker.com/_/mysql/)
  MYSQL_DATABASE: "lynxphp"
  MYSQL_ROOT_PASSWORD: "mysql"
  MYSQL_ROOT_HOST: "%"

# We test PHP5.6 (the default) with MySQL
# Select image from https://hub.docker.com/_/php/
#test:php56:mysql:
#  tags:
#    - docker
#  script:
#   - tests/run.sh
#  - vendor/bin/phpunit --configuration phpunit_mysql.xml --coverage-text

# We test PHP7 with MySQL, but we allow it to fail
#test:php7:mysql:
#  image: php:7-cli
#  tags:
#    - docker
#  script:
#   - tests/run.sh
#  - vendor/bin/phpunit --configuration phpunit_mysql.xml --coverage-text

test:php-latest:mysql-latest:
  <<: *alpine
  image: php:8.0.0-cli-alpine
  services:
    - name: mysql/mysql-server:latest
      alias: mysql
  tags:
    - docker
  script:
    - tests/run.sh
#  allow_failure: true
